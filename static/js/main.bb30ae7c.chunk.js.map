{"version":3,"sources":["redux/store.js","redux/langReducer.js","redux/headerReducer.js","redux/titleReducer.js","redux/mobileReducer.js","components/loadingComponents/ContactLoader.js","components/Contact.js","components/About.js","components/projects/Project.js","components/Projects.js","components/Start.js","components/loadingComponents/PageLoader.js","components/404.js","components/Toggle.js","components/Burger.js","components/Header.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["store","createStore","combineReducers","lang","state","action","type","header","title","undefined","mobile","window","innerWidth","__REDUX_DEVTOOLS_EXTENSION__","ContactLoading","props","className","done","doneMessage","class","Contact","useState","loading","setLoading","setDone","contact","useSelector","id","onSubmit","e","preventDefault","formData","FormData","target","fetch","method","mode","body","then","resp","name","placeholder","nameInput","emailInput","textInput","contactButton","About","about","text","src","ActionButton","content","buttonAction","href","link","icon","Project","preview","style","fontSize","split","length","maxWidth","year","description","actions","demo","sources","disabled","onRequest","ProjectList","projects","map","pr","size","TextSwitch","words","start","word","setWord","useEffect","setTimeout","Start","display","justifyContent","partOne","partTwo","buttons","github","onClick","scrollTo","left","top","document","scrollHeight","behavior","Loader","Unknown","notFound","img","to","ToggleCircle","dispatch","useDispatch","currentLang","language","a","async","json","data","data-langauge","active","alt","image","Toggle","Burger","bg","background","color","Link","getElementById","section","scrollIntoView","block","borderBottom","border","children","Header","currentSection","setBg","font","setFont","hidden","maxHeight","overflow","backgroundColor","Wrapper","sectionTitles","handleJsonResp","url","func","getLang","addEventListener","forEach","sec","rect","headerHeight","querySelector","getBoundingClientRect","height","offset","pageYOffset","bottom","getScrollToElement","y","getRectTop","path","exact","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb30ae7c.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux';\r\nimport { langReducer } from './langReducer';\r\nimport { titleReducer } from './titleReducer';\r\nimport { mobileReducer } from './mobileReducer';\r\nimport { headerReducer } from './headerReducer';\r\n\r\nexport const store = createStore(combineReducers({\r\n    lang: langReducer, \r\n    header: headerReducer,\r\n    title: titleReducer,\r\n    mobile: mobileReducer\r\n}), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","export const langReducer = (state = {}, action) => {\r\n    if (action.type == \"LANG_SWITCH\") {\r\n        return action.lang;\r\n    } \r\n    return state;\r\n}\r\n","export const headerReducer = (state = false, action) => {\r\n    if (action.type === 'TOGGLE_HEADER') {\r\n        return action.header;\r\n    }\r\n    return state;\r\n}","export const titleReducer = (state = '', action) => {\r\n    if (action.title !== undefined) {\r\n        return action.title;\r\n    }\r\n    return state;\r\n}","export const mobileReducer = (\r\n    state = window.innerWidth < 600 ? true : false,\r\n    action\r\n) => {\r\n    return state;\r\n};\r\n","import React from 'react';\r\n\r\nexport const ContactLoading = props => (\r\n    <div className=\"sent-wrapper\">\r\n        {props.done ? (\r\n            <h1 className=\"message-sent-header\">{props.doneMessage}</h1>\r\n        ) : (\r\n            <div class=\"c-loading\">\r\n                <div class=\"line\"></div>\r\n                <div class=\"line\"></div>\r\n                <div class=\"line\"></div>\r\n            </div>\r\n        )}\r\n    </div>\r\n);","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { ContactLoading } from './loadingComponents/ContactLoader';\r\n\r\nexport const Contact = props => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [done, setDone] = useState(false);\r\n    const { contact } = useSelector(state => state.lang);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData(e.target);\r\n        fetch(\"http://localhost:3001/email\", {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            body: formData\r\n        }).then(resp => {\r\n            setDone(true);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div id=\"contact\" className=\"centered-section contact-section\">\r\n            <h1 className=\"contact-header\">{contact.header}</h1>\r\n            {loading ? (\r\n                <ContactLoading done={done} doneMessage={contact.done} />\r\n            ) : (\r\n                <form onSubmit={handleSubmit} className=\"contact-form\">\r\n                    <input\r\n                        name=\"name\"\r\n                        className=\"name-input\"\r\n                        placeholder={contact.nameInput}\r\n                        type=\"text\"\r\n                    />\r\n                    <input\r\n                        name=\"email\"\r\n                        className=\"email-input\"\r\n                        placeholder={contact.emailInput}\r\n                        type=\"text\"\r\n                    />\r\n                    <textarea\r\n                        name=\"message\"\r\n                        placeholder={contact.textInput}\r\n                        className=\"textarea-input\"\r\n                    />\r\n                    <button className=\"contact-button\" type=\"submit\">\r\n                        {contact.contactButton}\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const About = props => {\r\n    const { about } = useSelector(state => state.lang);\r\n\r\n    return (\r\n        <div id=\"about\" className=\"centered-section about\">\r\n            <h1 className=\"about-header\">{about.header}</h1>\r\n            <p className=\"about-paragraph\">{about.text}</p>\r\n            <img src=\"/portfolio/Frame.png\" />\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nconst ActionButton = props => {\r\n    return props.content ? (\r\n        <button className={`action-button ${props.buttonAction}`}>\r\n            <a className=\"action-link\" href={`${props.link || \"\"}`}>\r\n                {props.icon} {props.content}\r\n            </a>\r\n        </button>\r\n    ) : (\r\n        \"\"\r\n    );\r\n};\r\n\r\nexport const Project = props => {\r\n    return (\r\n        <div className=\"project-container\">\r\n            <img className=\"project-img\" src={props.content.preview} />\r\n            <div className=\"project-text\">\r\n                <div className=\"project-header\">\r\n                    <h1\r\n                        style={{\r\n                            fontSize:\r\n                                props.content.name.split(\" \").length > 2\r\n                                    ? \"18px\"\r\n                                    : \"24px\",\r\n                            maxWidth: \"250px\"\r\n                        }}\r\n                        className=\"project-header-name\"\r\n                    >\r\n                        {props.content.name}\r\n                    </h1>\r\n                    <div className=\"project-header-date\">\r\n                        <p className=\"project-date\">{props.content.year}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"project-paragraph\">\r\n                    <p className=\"project-paragraph-text\">\r\n                        {props.content.description}\r\n                    </p>\r\n                </div>\r\n                <div className=\"project-buttons\">\r\n                    <ActionButton\r\n                        icon={<i className=\"fas fa-laptop\"></i>}\r\n                        buttonAction=\"demo\"\r\n                        link={props.content.actions.demo.link}\r\n                        content={props.content.actions.demo.text}\r\n                    />\r\n                    <ActionButton\r\n                        icon={<i className=\"fas fa-code\"></i>}\r\n                        buttonAction=\"source\"\r\n                        link={props.content.actions.sources.link}\r\n                        content={props.content.actions.sources.text}\r\n                    />\r\n                    <ActionButton\r\n                        icon={<i className=\"far fa-eye-slash\"></i>}\r\n                        buttonAction=\"req\"\r\n                        disabled\r\n                        content={props.content.actions.onRequest}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Project } from './projects/Project';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const ProjectList = props => {\r\n    const { projects } = useSelector(state => state.lang);\r\n\r\n    return (\r\n        <div id=\"projects\" className=\"projects-container\">\r\n            <h1 className=\"projects-header\">\r\n                {projects.header}\r\n            </h1>\r\n            <div className=\"project-list\">\r\n                {projects.projects.map(pr => <Project size=\"24\" content={pr} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport FadeProps from \"fade-props\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TextSwitch = props => {\r\n    const { words } = useSelector(state => state.lang.start);\r\n    const [word, setWord] = useState(0);\r\n    const mobile = useSelector(state => state.mobile);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setWord(word + 1 >= words.length ? 0 : word + 1);\r\n        }, 3000);\r\n    }, [word]);\r\n\r\n    return mobile ? (\r\n        <span>{words[0]}</span>\r\n    ) : (\r\n        <FadeProps>\r\n            <span>{words[word]}</span>\r\n        </FadeProps>\r\n    );\r\n};\r\n\r\nexport const Start = props => {\r\n    const { start } = useSelector(state => state.lang);\r\n    return (\r\n        <div className=\"start-container-wrapper\">\r\n            <div className=\"start-container\">\r\n                <p\r\n                    style={{ display: \"flex\", justifyContent: \"space-around\" }}\r\n                    className=\"start-header\"\r\n                >\r\n                    {start.partOne}{\" \"}\r\n                    <span className=\"blue-detail\">{start.name}</span>{\" \"}\r\n                    {start.partTwo}{\" \"}\r\n                    <span className=\"red-detail\">\r\n                        <i className=\"fas fa-heart\"></i>\r\n                    </span>{\" \"}\r\n                    <span className=\"blue-detail text-switch\">\r\n                        <TextSwitch {...start.words} />\r\n                    </span>{\" \"}\r\n                    :)\r\n                </p>\r\n                <div className=\"start-buttons\">\r\n                    <a target=\"_blank\" href=\"https://github.com/tbl4ero\">\r\n                        <button className=\"start-button github\">\r\n                            <i class=\"fab fa-github\"></i> {start.buttons.github}{\" \"}\r\n                        </button>\r\n                    </a>\r\n\r\n                    <button\r\n                        onClick={() =>\r\n                            window.scrollTo({\r\n                                left: 0,\r\n                                top: document.body.scrollHeight,\r\n                                behavior: \"smooth\"\r\n                            })\r\n                        }\r\n                        className=\"start-button contact\"\r\n                    >\r\n                        {start.buttons.contact}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Loader = props => (    \r\n    <div class=\"loading\">\r\n      <div class=\"square-holder\">\r\n        <div class=\"square\"></div>\r\n      </div>\r\n    </div>\r\n);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const Unknown = props => {\r\n\r\n    const content = useSelector(state => state.lang.notFound);\r\n\r\n    return (\r\n        <div className=\"nf-wrapper\">\r\n            <div className=\"nf-content\">\r\n                <img className=\"nf-img\" src={content.img} />\r\n                <h1 className=\"nf-header\">\r\n                    {content.header}\r\n                </h1>\r\n                <Link className=\"nf-link\" to=\"/portfolio\">\r\n                    {content.link}\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst ToggleCircle = props => {\r\n    const dispatch = useDispatch();\r\n    const currentLang = useSelector(state => state.lang.language)\r\n    return (\r\n        <div\r\n            onClick={async() => {\r\n                \r\n                await fetch(`/portfolio/${ currentLang == 'ru' ? 'en' : 'ru' }.json`)\r\n                    .then(resp => resp.json())\r\n                    .then(data => dispatch({ type: \"LANG_SWITCH\", lang: data }))\r\n            }\r\n            }\r\n            data-langauge={props.lang}\r\n            className={`toggle-circle ${props.active == props.lang ? \"active\" : \"\"}`}\r\n        >\r\n            <img className=\"circle-image\" alt=\"English\" src={props.image} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Toggle = props => {\r\n    const lang = useSelector(state => state.lang.language);\r\n    return (\r\n        <div className=\"toggle-wrapper\">\r\n            <div className=\"header-toggle\">\r\n                <ToggleCircle lang=\"en\" active={lang} image=\"/portfolio/Us-uk.svg\" />\r\n                <ToggleCircle lang=\"ru\" active={lang} image=\"/portfolio/flag-400.png\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const Burger = props => {\r\n\r\n    const { header } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const bg = {\r\n        background: props.color\r\n    }\r\n\r\n    return (\r\n        <div \r\n            onClick={() => {\r\n                dispatch({ type: 'TOGGLE_HEADER', header: !header });\r\n            }} \r\n            className=\"bar-wrapper\"\r\n        >\r\n            <div style={{...bg}} className={`bar-1 ${header ? 'anim' : 'out'}`}></div>\r\n            <div style={{...bg}} className={`bar-2 ${header ? 'anim' : 'out'}`}></div>\r\n            <div style={{...bg}} className={`bar-3 ${header ? 'anim' : 'out'}`}></div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Toggle } from \"./Toggle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Burger } from \"./Burger\";\r\n\r\nconst Link = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = e => {\r\n        e.preventDefault();\r\n        dispatch({ type: \"TOGGLE_HEADER\", header: false });\r\n        document\r\n            .getElementById(props.section)\r\n            .scrollIntoView({ behavior: 'smooth', block: 'start'});\r\n    };\r\n\r\n    return (\r\n        <div className=\"link-wrapper\">\r\n            <a onClick={handleClick}\r\n                style={{\r\n                    borderBottom: props.border\r\n                }}\r\n                href={props.link}\r\n            >\r\n                {props.children}\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Header = props => {\r\n    const currentSection = useSelector(state => state.title);\r\n    const [bg, setBg] = useState(\"white\");\r\n    const [font, setFont] = useState(\"#408CFF\");\r\n    const hidden = useSelector(state => state.header);\r\n    const { mobile } = useSelector(state => state);\r\n    const style = { maxHeight: !hidden ? \"0\" : \"100vh\", overflow: \"hidden\" };\r\n    const { header } = useSelector(state => state.lang);\r\n\r\n    useEffect(() => {\r\n        if (currentSection == \"about\" || currentSection == \"contact\") {\r\n            setBg(\"#408CFF\");\r\n            setFont(\"white\");\r\n        } else {\r\n            setBg(\"white\");\r\n            setFont(\"#408CFF\");\r\n        }\r\n    }, [currentSection]);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                backgroundColor: bg,\r\n                color: font\r\n            }}\r\n            className=\"header\"\r\n        >\r\n            {mobile ? <Burger color={font} /> : \"\"}\r\n            <div style={mobile ? style : {}} className=\"header-items\">\r\n                <div className=\"links\">\r\n                    <Link\r\n                        section=\"about\"\r\n                        link=\"#\"\r\n                        border={\r\n                            currentSection == \"about\"\r\n                                ? \"2px solid white\"\r\n                                : \"none\"\r\n                        }\r\n                    >\r\n                        {header.about}\r\n                    </Link>\r\n                    <Link\r\n                        section=\"projects\"\r\n                        link=\"#\"\r\n                        border={\r\n                            currentSection == \"projects\"\r\n                                ? \"2px solid #408CFF\"\r\n                                : \"none\"\r\n                        }\r\n                    >\r\n                        {header.projects}\r\n                    </Link>\r\n                    <Link\r\n                        section=\"contact\"\r\n                        link=\"#\"\r\n                        border={\r\n                            currentSection == \"contact\"\r\n                                ? \"2px solid white\"\r\n                                : \"none\"\r\n                        }\r\n                    >\r\n                        {header.contact}\r\n                    </Link>\r\n                </div>\r\n                <Toggle />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Contact } from \"./Contact\";\r\nimport { About } from \"./About\";\r\nimport { ProjectList } from \"./Projects\";\r\nimport { Start } from \"./Start\";\r\nimport { Loader } from \"./loadingComponents/PageLoader\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { Unknown } from \"./404\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Header } from \"./Header\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport const Wrapper = props => {\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const sectionTitles = [\"about\", \"projects\", \"contact\"];\r\n\r\n    useEffect(() => {\r\n        async function getLang() {\r\n            let langCode = \"ru\";\r\n            const handleJsonResp = async (url, func) => {\r\n                await fetch(url)\r\n                    .then(resp => resp.json())\r\n                    .then(func);\r\n            };\r\n            await handleJsonResp(\r\n                `/portfolio/${langCode === \"ru\" ? \"ru\" : \"en\"}.json`,\r\n                data => {\r\n                    dispatch({ type: \"LANG_SWITCH\", lang: data });\r\n                }\r\n            );\r\n            setLoading(false);\r\n        }\r\n        getLang();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getRectTop = id => {\r\n            const rect = document\r\n                .querySelector(`#${id}`)\r\n                .getBoundingClientRect();\r\n            return {\r\n                top: rect.y,\r\n                bottom: rect.y + rect.height,\r\n                id\r\n            };\r\n        };\r\n\r\n        const getScrollToElement = rect => {\r\n            const headerHeight = document\r\n                .querySelector(\".header\")\r\n                .getBoundingClientRect().height;\r\n            const offset = window.pageYOffset;\r\n            if (\r\n                offset >= offset + rect.top - headerHeight &&\r\n                offset <= offset + rect.bottom - headerHeight\r\n            ) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        window.addEventListener(\"scroll\", () => {\r\n            dispatch({ type: \"SWITCH_TITLE\", title: \"\" });\r\n            sectionTitles.forEach(sec => {\r\n                if (getScrollToElement(getRectTop(sec))) {\r\n                    dispatch({ type: \"TITLE_SWITCH\", title: sec });\r\n                }\r\n            });\r\n        });\r\n    }, [loading]);\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n                <div>\r\n                    <BrowserRouter>\r\n                        <Switch>\r\n                            <Route path=\"/portfolio\" exact>\r\n                                <Header />\r\n                                <Start />\r\n                                <About />\r\n                                <ProjectList />\r\n                                <Contact />\r\n                            </Route>\r\n                        </Switch>\r\n                        <Route path=\"/portfolio/:route\">\r\n                            <Unknown />\r\n                        </Route>\r\n                    </BrowserRouter>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\nimport { Wrapper } from \"./components/Wrapper\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n            <Wrapper />\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n  \r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n  \r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n    \r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}